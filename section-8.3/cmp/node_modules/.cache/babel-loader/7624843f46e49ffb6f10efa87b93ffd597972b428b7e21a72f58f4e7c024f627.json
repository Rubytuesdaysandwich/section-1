{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      topics: [{\n        id: \"basics\",\n        title: \"The Basics\",\n        description: \"Core Vue basics you have to know\",\n        fullText: \"Vue is a great framework and it has a couple of key concepts: Data binding, events, components and reactivity - that should tell you something!\"\n      }, {\n        id: \"components\",\n        title: \"Components\",\n        description: \"Components are a core concept for building Vue UIs and apps\",\n        fullText: \"With components, you can split logic (and markup) into separate building blocks and then combine those building blocks (and re-use them) to build powerful user interfaces.\"\n      }],\n      activeTopic: null\n      // *▼ provide: { step one\n      //   topics: [\n      //     {\n      //       id: \"basics\",\n      //       title: \"The Basics\",\n      //       description: \"Core Vue basics you have to know\",\n      //       fullText:\n      //         \"Vue is a great framework and it has a couple of key concepts: Data binding, events, components and reactivity - that should tell you something!\",\n      //     },\n      //     {\n      //       id: \"components\",\n      //       title: \"Components\",\n      //       description:\n      //         \"Components are a core concept for building Vue UIs and apps\",\n      //       fullText:\n      //         \"With components, you can split logic (and markup) into separate building blocks and then combine those building blocks (and re-use them) to build powerful user interfaces.\",\n      //     },\n      //   ],\n      //*▲ },this object gets condensed into the provide(){} method\n    };\n  },\n\n  provide() {\n    return {\n      topics: this.topics,\n      selectTopic: this.activateTopic /*pointing at the method and giving it a key which the inject uses to access it on the other components */\n    }; //getting dynamic data from topics so it will be updated as topics are updated\n  },\n\n  methods: {\n    activateTopic(topicId) {\n      this.activeTopic = this.topics.find(topic => topic.id === topicId);\n    }\n  },\n  mounted() {\n    //mounted life cycle\n    setTimeout(() => {\n      this.topics.push({\n        id: \"events\",\n        title: \"Events\",\n        description: \"Events are important in Vue\",\n        fullText: \"Events allow you to trigger code on demand!\"\n      });\n    }, 3000);\n  }\n};","map":{"version":3,"names":["data","topics","id","title","description","fullText","activeTopic","provide","selectTopic","activateTopic","methods","topicId","find","topic","mounted","setTimeout","push"],"sources":["C:\\Users\\ruebe\\Documents\\GitHub\\vue-js-coding-lectures-udemy-course\\section-8.3\\cmp\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <active-element\n      :topic-title=\"activeTopic && activeTopic.title\"\n      :text=\"activeTopic && activeTopic.fullText\"\n    ></active-element>\n    <knowledge-base></knowledge-base>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      topics: [\n        {\n          id: \"basics\",\n          title: \"The Basics\",\n          description: \"Core Vue basics you have to know\",\n          fullText:\n            \"Vue is a great framework and it has a couple of key concepts: Data binding, events, components and reactivity - that should tell you something!\",\n        },\n        {\n          id: \"components\",\n          title: \"Components\",\n          description:\n            \"Components are a core concept for building Vue UIs and apps\",\n          fullText:\n            \"With components, you can split logic (and markup) into separate building blocks and then combine those building blocks (and re-use them) to build powerful user interfaces.\",\n        },\n      ],\n      activeTopic: null,\n      // *▼ provide: { step one\n      //   topics: [\n      //     {\n      //       id: \"basics\",\n      //       title: \"The Basics\",\n      //       description: \"Core Vue basics you have to know\",\n      //       fullText:\n      //         \"Vue is a great framework and it has a couple of key concepts: Data binding, events, components and reactivity - that should tell you something!\",\n      //     },\n      //     {\n      //       id: \"components\",\n      //       title: \"Components\",\n      //       description:\n      //         \"Components are a core concept for building Vue UIs and apps\",\n      //       fullText:\n      //         \"With components, you can split logic (and markup) into separate building blocks and then combine those building blocks (and re-use them) to build powerful user interfaces.\",\n      //     },\n      //   ],\n      //*▲ },this object gets condensed into the provide(){} method\n    };\n  },\n  provide() {\n    return {\n      topics: this.topics,\n      selectTopic:\n        this\n          .activateTopic /*pointing at the method and giving it a key which the inject uses to access it on the other components */,\n    }; //getting dynamic data from topics so it will be updated as topics are updated\n  },\n  methods: {\n    activateTopic(topicId) {\n      this.activeTopic = this.topics.find((topic) => topic.id === topicId);\n    },\n  },\n  mounted() {\n    //mounted life cycle\n    setTimeout(() => {\n      this.topics.push({\n        id: \"events\",\n        title: \"Events\",\n        description: \"Events are important in Vue\",\n        fullText: \"Events allow you to trigger code on demand!\",\n      });\n    }, 3000);\n  },\n};\n</script>\n\n<style>\n* {\n  box-sizing: border-box;\n}\nhtml {\n  font-family: sans-serif;\n}\nbody {\n  margin: 0;\n}\nsection {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n  margin: 2rem auto;\n  max-width: 40rem;\n  padding: 1rem;\n  border-radius: 12px;\n}\n\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n}\n\nli {\n  border-radius: 12px;\n  border: 1px solid #ccc;\n  padding: 1rem;\n  width: 15rem;\n  margin: 0 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\nh2 {\n  margin: 0.75rem 0;\n  text-align: center;\n}\n\nbutton {\n  font: inherit;\n  border: 1px solid #c70053;\n  background-color: #c70053;\n  color: white;\n  padding: 0.75rem 2rem;\n  border-radius: 30px;\n  cursor: pointer;\n}\n\nbutton:hover,\nbutton:active {\n  background-color: #e24d8b;\n  border-color: #e24d8b;\n}\n</style>\n"],"mappings":";AAWA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,CACN;QACEC,EAAE,EAAE,QAAQ;QACZC,KAAK,EAAE,YAAY;QACnBC,WAAW,EAAE,kCAAkC;QAC/CC,QAAQ,EACN;MACJ,CAAC,EACD;QACEH,EAAE,EAAE,YAAY;QAChBC,KAAK,EAAE,YAAY;QACnBC,WAAW,EACT,6DAA6D;QAC/DC,QAAQ,EACN;MACJ,CAAC,CACF;MACDC,WAAW,EAAE;MACb;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;EACH,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACR,OAAO;MACLN,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBO,WAAW,EACT,IAAG,CACAC,aAAY,CAAE;IACrB,CAAC,EAAE;EACL,CAAC;;EACDC,OAAO,EAAE;IACPD,aAAaA,CAACE,OAAO,EAAE;MACrB,IAAI,CAACL,WAAU,GAAI,IAAI,CAACL,MAAM,CAACW,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACX,EAAC,KAAMS,OAAO,CAAC;IACtE;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR;IACAC,UAAU,CAAC,MAAM;MACf,IAAI,CAACd,MAAM,CAACe,IAAI,CAAC;QACfd,EAAE,EAAE,QAAQ;QACZC,KAAK,EAAE,QAAQ;QACfC,WAAW,EAAE,6BAA6B;QAC1CC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;EACV;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}